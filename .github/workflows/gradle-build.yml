# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

# Repo Action 페이지에 나타날 이름 
name: Spring Boot & Gradle CI/CD 

on:
#   release:
#     types: [created]
  workflow_dispatch:
    inputs:
      destination_server:
        description: 'Server to deploy'
        required: True
        default: '13.124.249.181'
      service_name:
        description: 'Service name'
        required: True
        default: 'UserManager'
      profiles:
        description: 'Profiles'
        required: True
        default: 'prod'
      package_name:
        description: 'Package to deploy'
        required: True
        default: 'UserManager-0.0.1-SNAPSHOT.jar'

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle
      run: ./gradlew clean build
      
    - name: Save pem to file
      run: 'echo "$EC2_PEM" > .vmc.pem && chmod 400 .vmc.pem'
      shell: bash
      env:
        EC2_PEM: ${{secrets.EC2_PEM}}
        
    - name: Send jar file to EC2
      uses: appleboy/scp-action@master
      with:
        host: ${{ github.event.inputs.destination_server }}
        username: ubuntu
        key_path: ".vmc.pem"
        source: "build/libs/${{ github.event.inputs.package_name }}"
        target: "/home/ubuntu"
        strip_components: 2
        
    - name: Rerun new jar
      uses: appleboy/ssh-action@master
      with:
        host: ${{ github.event.inputs.destination_server }}
        username: ubuntu
        key_path: ".vmc.pem"
        script: |
            ./rerun.sh ${{ github.event.inputs.service_name }} ${{ github.event.inputs.package_name }}
            
           
# The USERNAME and TOKEN need to correspond to the credentials environment variables used in
    # the publishing section of your build.gradle
#     - name: Publish to GitHub Packages
#       run: gradle publish
#       env:
#         USERNAME: ${{ github.actor }}
#         TOKEN: ${{ secrets.GITHUB_TOKEN }}
